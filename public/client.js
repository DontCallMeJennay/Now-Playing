"use strict";function handleClientLoad(){gapi.load("client:auth2",initClient)}function initClient(){gapi.client.init({discoveryDocs:DISCOVERY_DOCS,clientId:CLIENT_ID,scope:SCOPES}).then(function(){gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus),updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get()),authorizeButton.onclick=handleAuthClick,signoutButton.onclick=handleSignoutClick})}function updateSigninStatus(t){t?(authorizeButton.style.display="none",signoutButton.style.display="block",getSubscriptions()):(authorizeButton.style.display="block",signoutButton.style.display="none",vm.ytResults=[{}])}function handleAuthClick(t){gapi.auth2.getAuthInstance().signIn()}function handleSignoutClick(t){gapi.auth2.getAuthInstance().signOut()}function getSubscriptions(){gapi.client.youtube.subscriptions.list({part:"snippet,contentDetails",mine:"true",maxResults:20}).then(function(t){vm.setVideoList(t.result.items)})}Vue.component("steam-list",{props:{contentTitle:String,contentData:Array},data:function(){return{user:this.steamId,signedIn:!1}},methods:{clearData:function(){this.signedIn=!1,this.user="",localStorage.removeItem("steamName"),vm.clearList()},getSteamId:function(){console.log("click");var t=document.getElementById("steamNum").value;console.log("uinput: ",t),""!==t&&(this.getSteamInfo(t),localStorage.setItem("steamName",t))},getSteamInfo:function(t){$.ajax({type:"POST",url:"/steam",headers:{username:t},success:function(t){vm.setSteamList(t),this.signedIn=!0,$("#steam").css({color:"white"})},error:function(t){console.log(t.statusCode)}})}},template:'\n            <div class="content">\n            <h3>Steam table goes here...</h3>\n            <input type="text" id="steamNum" />\n            <button id="#getsteam" @click="getSteamId">Get Steam data</button>\n            <div v-if="this.signedIn === true">\n                <section id="gamelist">\n                    <template v-for="item in contentData[0]">\n                        <p>{{item}}</p>\n                  </template>\n                </section>\n                <section id="friendList">\n                    <template v-for="item in contentData[1]">\n                        <p>{{item}}</p>\n                    </template>\n                </section>\n                </div>\n            </div>\n        '}),Vue.component("steam-item",{props:["type"],template:"<p>Testing steam-item {{type}} component</p>"}),Vue.component("twitch-list",{props:{contentTitle:String,contentData:Array,contentType:String,clearList:Function,getStreamList:Function,twitchName:String},data:function(){return{user:this.twitchName,signedIn:!1}},methods:{getName:function(){var t=document.getElementById("username");""!==t.value&&(user=t.value.toLowerCase(),vm.getStreamList(user),this.signedIn=!0,localStorage.setItem("twitchName",user))},clearData:function(){this.signedIn=!1,this.user="",localStorage.removeItem("twitchName"),vm.clearList()}},mounted:function(){var t=localStorage.getItem("twitchName");t&&(this.signedIn=!0,this.user=t)},template:'\n        <div class="content">\n            <section v-if="this.signedIn === false">\n                <label for="username">Enter Twitch.tv username</label>\n                <input type="text" v-model=user id="username"/>\n                <button class="btn-filter" id="twitch-auth" @click=getName()>Get follow list</button></button>\n            </section>\n            <section v-if="this.signedIn === true">\n                <span>Signed in as {{user}}</span>\n                <button class="btn-filter" id="twitch-signout" style="display: block;" @click=clearData()>Clear Twitch list</button>\n            </section>\n\n        <table v-if="this.signedIn === true">\n            <caption class="hidden" aria-hidden="false">{{contentTitle}}</caption>\n                <thead>\n                    <tr>\n                        <th scope="col">Channel</th>\n                        <th scope="col">Name</th>\n                        <th scope="col">Description</th>\n                    </tr>\n                </thead>\n                <tbody>                    \n                    <template v-for="item in contentData">\n                        <twitch-result\n                            :logo="item.logo"\n                            :name="item.display_name"\n                            :status="item.title"\n                            :url="item.url"                                                       \n                        ></twitch-result> \n                    </template>                       \n                </tbody>\n            </table>\n        </div>\n    '}),Vue.component("twitch-result",{props:["game","logo","name","status","url"],template:'<tr class="row">\n                <th scope="row"><img :src="logo" :alt="name + \' stream logo\'"></th>\n                <td><span class="names"><a :href="url"> {{ name }} </a></span></td>\n                <td><span> {{ game }} </span> </td>\n                <td><span class="sm-hide"> <a :href="url"> {{ status }} </a></span></td>\n                </tr>'}),Vue.component("youtube-list",{props:{contentTitle:String,contentData:Array,contentType:String},methods:{snip:function(t){return t.length>100?t.substr(0,200)+"...":t}},template:'\n        <div class="content">\n            <button class="btn-filter" id="authorize-button" style="display: block;">Authorize Y</button>\n            <button class="btn-filter" id="signout-button" style="display: block;">Sign out of YouTube</button>\n            <table v-if="this.contentData.length > 0">\n                <caption class="hidden" aria-hidden="false">{{contentTitle}}</caption>\n            <thead>\n                <tr>\n                    <th scope="col">Channel</th>\n                    <th scope="col">Name</th>\n                    <th scope="col">Description</th>\n                </tr>\n            </thead>\n            <tbody>   \n                <template v-for="item in contentData">\n                    <template v-if="item.snippet && item.contentDetails.newItemCount > 0">\n                        <youtube-result\n                            :desc="snip(item.snippet.description)" \n                            :logo="item.snippet.thumbnails.default.url" \n                            :name="item.snippet.title" \n                            :newItem="item.contentDetails.newItemCount"                                                                               \n                            :url="item.snippet.resourceId.channelId"                                                       \n                        ></youtube-result> \n                    </template>\n                </template>            \n                </tbody>\n            </table>\n        </div>\n            '}),Vue.component("youtube-result",{props:{desc:{type:String,default:"No description given"},logo:String,name:String,newItem:{type:[Number,String],default:0},url:String},template:'<tr class="row">\n                <th scope="row"><img :src="logo" :alt="name + \' channel logo\'"><span> {{newItem}} </span></th>\n                <td><span class="names"><a :href="\'https://youtube.com/channel/\' + url + \'/videos\'"> {{ name }} </a></span></td>\n                <td><span class="sm-hide"> <a :href="\'https://youtube.com/channel/\' + url + \'/videos\'"> {{ desc }} </a></span></td>\n                </tr>'});var vm=new Vue({el:"#vue-app",data:{twitchResults:[],ytResults:[],steamResults:[],twitchName:"",steamId:""},methods:{setUser:function(t){this.twitchName=t},getStreamList:function(t){$.ajax({type:"POST",url:"/streams",headers:{username:t},success:function(t){vm.setStreamList(t),$("#games").css({color:"#4B367C"})},error:function(t){console.error(t)}})},setStreamList:function(t){for(var e=0;e<t[0].length;e++)t[0][e].display_name=t[1][e].display_name,t[0][e].logo=t[1][e].profile_image_url;this.twitchResults=t[0]},setSteamList:function(t){this.steamResults=t,console.log("steamResults: ",t)},getVideoList:function(t){},setVideoList:function(t){this.ytResults=t,$("#videos").css({color:"red"})},clearList:function(){this.twitchResults=[]}},mounted:function(){var t=localStorage.getItem("twitchName");t&&(this.setUser(t,"twitchName"),this.getStreamList(this.twitchName))}}),CLIENT_ID="372774319049-pk9d85udr75rlqcluuq12apdeqtnk8go.apps.googleusercontent.com",DISCOVERY_DOCS=["https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest"],SCOPES="https://www.googleapis.com/auth/youtube.readonly",authorizeButton=document.getElementById("authorize-button"),signoutButton=document.getElementById("signout-button");Vue.component("steam-list",{props:{contentTitle:String,contentData:Array},data:function(){return{user:this.steamId,signedIn:!1}},methods:{clearData:function(){this.signedIn=!1,this.user="",localStorage.removeItem("steamName"),vm.clearList()},getSteamId:function(){console.log("click");var t=document.getElementById("steamNum").value;console.log("uinput: ",t),""!==t&&(this.getSteamInfo(t),localStorage.setItem("steamName",t))},getSteamInfo:function(t){$.ajax({type:"POST",url:"/steam",headers:{username:t},success:function(t){vm.setSteamList(t),this.signedIn=!0,$("#steam").css({color:"white"})},error:function(t){console.log(t.statusCode)}})}},template:'\n            <div class="content">\n            <h3>Steam table goes here...</h3>\n            <input type="text" id="steamNum" />\n            <button id="#getsteam" @click="getSteamId">Get Steam data</button>\n            <div v-if="this.signedIn === true">\n                <section id="gamelist">\n                    <template v-for="item in contentData[0]">\n                        <p>{{item}}</p>\n                  </template>\n                </section>\n                <section id="friendList">\n                    <template v-for="item in contentData[1]">\n                        <p>{{item}}</p>\n                    </template>\n                </section>\n                </div>\n            </div>\n        '}),Vue.component("steam-item",{props:["type"],template:"<p>Testing steam-item {{type}} component</p>"}),Vue.component("twitch-list",{props:{contentTitle:String,contentData:Array,contentType:String,clearList:Function,getStreamList:Function,twitchName:String},data:function(){return{user:this.twitchName,signedIn:!1}},methods:{getName:function(){var t=document.getElementById("username");""!==t.value&&(user=t.value.toLowerCase(),vm.getStreamList(user),this.signedIn=!0,localStorage.setItem("twitchName",user))},clearData:function(){this.signedIn=!1,this.user="",localStorage.removeItem("twitchName"),vm.clearList()}},mounted:function(){var t=localStorage.getItem("twitchName");t&&(this.signedIn=!0,this.user=t)},template:'\n        <div class="content">\n            <section v-if="this.signedIn === false">\n                <label for="username">Enter Twitch.tv username</label>\n                <input type="text" v-model=user id="username"/>\n                <button class="btn-filter" id="twitch-auth" @click=getName()>Get follow list</button></button>\n            </section>\n            <section v-if="this.signedIn === true">\n                <span>Signed in as {{user}}</span>\n                <button class="btn-filter" id="twitch-signout" style="display: block;" @click=clearData()>Clear Twitch list</button>\n            </section>\n\n        <table v-if="this.signedIn === true">\n            <caption class="hidden" aria-hidden="false">{{contentTitle}}</caption>\n                <thead>\n                    <tr>\n                        <th scope="col">Channel</th>\n                        <th scope="col">Name</th>\n                        <th scope="col">Description</th>\n                    </tr>\n                </thead>\n                <tbody>                    \n                    <template v-for="item in contentData">\n                        <twitch-result\n                            :logo="item.logo"\n                            :name="item.display_name"\n                            :status="item.title"\n                            :url="item.url"                                                       \n                        ></twitch-result> \n                    </template>                       \n                </tbody>\n            </table>\n        </div>\n    '}),Vue.component("twitch-result",{props:["game","logo","name","status","url"],template:'<tr class="row">\n                <th scope="row"><img :src="logo" :alt="name + \' stream logo\'"></th>\n                <td><span class="names"><a :href="url"> {{ name }} </a></span></td>\n                <td><span> {{ game }} </span> </td>\n                <td><span class="sm-hide"> <a :href="url"> {{ status }} </a></span></td>\n                </tr>'}),Vue.component("youtube-list",{props:{contentTitle:String,contentData:Array,contentType:String},methods:{snip:function(t){return t.length>100?t.substr(0,200)+"...":t}},template:'\n        <div class="content">\n            <button class="btn-filter" id="authorize-button" style="display: block;">Authorize Y</button>\n            <button class="btn-filter" id="signout-button" style="display: block;">Sign out of YouTube</button>\n            <table v-if="this.contentData.length > 0">\n                <caption class="hidden" aria-hidden="false">{{contentTitle}}</caption>\n            <thead>\n                <tr>\n                    <th scope="col">Channel</th>\n                    <th scope="col">Name</th>\n                    <th scope="col">Description</th>\n                </tr>\n            </thead>\n            <tbody>   \n                <template v-for="item in contentData">\n                    <template v-if="item.snippet && item.contentDetails.newItemCount > 0">\n                        <youtube-result\n                            :desc="snip(item.snippet.description)" \n                            :logo="item.snippet.thumbnails.default.url" \n                            :name="item.snippet.title" \n                            :newItem="item.contentDetails.newItemCount"                                                                               \n                            :url="item.snippet.resourceId.channelId"                                                       \n                        ></youtube-result> \n                    </template>\n                </template>            \n                </tbody>\n            </table>\n        </div>\n            '}),Vue.component("youtube-result",{props:{desc:{type:String,default:"No description given"},logo:String,name:String,newItem:{type:[Number,String],default:0},url:String},template:'<tr class="row">\n                <th scope="row"><img :src="logo" :alt="name + \' channel logo\'"><span> {{newItem}} </span></th>\n                <td><span class="names"><a :href="\'https://youtube.com/channel/\' + url + \'/videos\'"> {{ name }} </a></span></td>\n                <td><span class="sm-hide"> <a :href="\'https://youtube.com/channel/\' + url + \'/videos\'"> {{ desc }} </a></span></td>\n                </tr>'});